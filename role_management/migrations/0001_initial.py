# Generated by Django 5.2.5 on 2025-08-26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RoleDefinition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('role_type', models.CharField(choices=[('admin', 'Administrator'), ('instructor', 'Instructor'), ('student', 'Student'), ('moderator', 'Moderator'), ('assistant', 'Teaching Assistant'), ('support', 'Support Staff')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('level', models.PositiveIntegerField(default=0, help_text='Role hierarchy level (higher = more privileges)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
            ],
            options={
                'verbose_name': 'Role Definition',
                'verbose_name_plural': 'Role Definitions',
                'db_table': 'role_definitions',
                'ordering': ['-level', 'name'],
                'indexes': [models.Index(fields=['role_type'], name='role_defini_role_ty_7b8c9d_idx'), models.Index(fields=['level'], name='role_defini_level_e4f5a6_idx'), models.Index(fields=['is_active'], name='role_defini_is_acti_1a2b3c_idx')],
            },
        ),
        migrations.CreateModel(
            name='RolePermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permissions', models.ManyToManyField(blank=True, to='auth.permission')),
            ],
            options={
                'verbose_name': 'Role Permission Group',
                'verbose_name_plural': 'Role Permission Groups',
                'db_table': 'role_permission_groups',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserRoleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('reason', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('role_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_assignments', to='role_management.roledefinition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Role Assignment',
                'verbose_name_plural': 'User Role Assignments',
                'db_table': 'user_role_assignments',
                'ordering': ['-assigned_at'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='user_role_a_user_id_7d8e9f_idx'), models.Index(fields=['role_definition', 'is_active'], name='user_role_a_role_de_1a2b3c_idx'), models.Index(fields=['assigned_at'], name='user_role_a_assigne_4e5f6a_idx'), models.Index(fields=['expires_at'], name='user_role_a_expires_7b8c9d_idx')],
            },
        ),
        migrations.CreateModel(
            name='RoleChangeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('assigned', 'Assigned'), ('revoked', 'Revoked'), ('suspended', 'Suspended'), ('reactivated', 'Reactivated')], max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_changes_made', to=settings.AUTH_USER_MODEL)),
                ('role_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_history', to='role_management.roledefinition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_change_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Role Change History',
                'verbose_name_plural': 'Role Change History',
                'db_table': 'role_change_history',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['user', 'changed_at'], name='role_change_user_id_9e8d7c_idx'), models.Index(fields=['role_definition', 'changed_at'], name='role_change_role_de_6b5a49_idx'), models.Index(fields=['action'], name='role_change_action_3c2d1e_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRoleRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justification', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('admin_notes', models.TextField(blank=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_role_requests', to=settings.AUTH_USER_MODEL)),
                ('requested_role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_requests', to='role_management.roledefinition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='role_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Role Request',
                'verbose_name_plural': 'User Role Requests',
                'db_table': 'user_role_requests',
                'ordering': ['-requested_at'],
                'indexes': [models.Index(fields=['status', 'requested_at'], name='user_role_r_status_8f7e6d_idx'), models.Index(fields=['user', 'status'], name='user_role_r_user_id_5c4b3a_idx'), models.Index(fields=['priority'], name='user_role_r_priorit_2d1e0f_idx')],
            },
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='permission_groups',
            field=models.ManyToManyField(blank=True, related_name='role_definitions', to='role_management.rolepermissiongroup'),
        ),
        migrations.AddConstraint(
            model_name='userroleassignment',
            constraint=models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('user', 'role_definition'), name='unique_active_user_role'),
        ),
        migrations.AddConstraint(
            model_name='userrolerequest',
            constraint=models.UniqueConstraint(condition=models.Q(('status', 'pending')), fields=('user', 'requested_role'), name='unique_pending_role_request'),
        ),
    ]