# Generated by Django 5.2.5 on 2025-08-27 15:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('role_management', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RolePermissionAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'role_permission_assignments',
            },
        ),
        migrations.AlterModelOptions(
            name='rolechangehistory',
            options={'ordering': ['-changed_at']},
        ),
        migrations.AlterModelOptions(
            name='roledefinition',
            options={'ordering': ['hierarchy_level', 'name']},
        ),
        migrations.AlterModelOptions(
            name='rolepermissiongroup',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='userroleassignment',
            options={'ordering': ['-assigned_at']},
        ),
        migrations.AlterModelOptions(
            name='userrolerequest',
            options={'ordering': ['-created_at']},
        ),
        migrations.RemoveConstraint(
            model_name='userroleassignment',
            name='unique_active_user_role',
        ),
        migrations.RemoveConstraint(
            model_name='userrolerequest',
            name='unique_pending_role_request',
        ),
        migrations.RemoveIndex(
            model_name='rolechangehistory',
            name='role_change_role_de_6b5a49_idx',
        ),
        migrations.RemoveIndex(
            model_name='rolechangehistory',
            name='role_change_action_3c2d1e_idx',
        ),
        migrations.RemoveIndex(
            model_name='roledefinition',
            name='role_defini_role_ty_7b8c9d_idx',
        ),
        migrations.RemoveIndex(
            model_name='roledefinition',
            name='role_defini_level_e4f5a6_idx',
        ),
        migrations.RemoveIndex(
            model_name='roledefinition',
            name='role_defini_is_acti_1a2b3c_idx',
        ),
        migrations.RemoveIndex(
            model_name='userroleassignment',
            name='user_role_a_user_id_7d8e9f_idx',
        ),
        migrations.RemoveIndex(
            model_name='userroleassignment',
            name='user_role_a_role_de_1a2b3c_idx',
        ),
        migrations.RemoveIndex(
            model_name='userroleassignment',
            name='user_role_a_expires_7b8c9d_idx',
        ),
        migrations.RemoveIndex(
            model_name='userrolerequest',
            name='user_role_r_status_8f7e6d_idx',
        ),
        migrations.RemoveIndex(
            model_name='userrolerequest',
            name='user_role_r_priorit_2d1e0f_idx',
        ),
        migrations.RenameField(
            model_name='rolechangehistory',
            old_name='metadata',
            new_name='new_values',
        ),
        migrations.RenameField(
            model_name='rolechangehistory',
            old_name='role_definition',
            new_name='role',
        ),
        migrations.RenameField(
            model_name='userroleassignment',
            old_name='expires_at',
            new_name='effective_until',
        ),
        migrations.RenameField(
            model_name='userroleassignment',
            old_name='role_definition',
            new_name='role',
        ),
        migrations.RenameField(
            model_name='userrolerequest',
            old_name='requested_at',
            new_name='created_at',
        ),
        migrations.RenameField(
            model_name='userrolerequest',
            old_name='admin_notes',
            new_name='review_notes',
        ),
        migrations.RenameField(
            model_name='userrolerequest',
            old_name='processed_at',
            new_name='reviewed_at',
        ),
        migrations.RenameIndex(
            model_name='rolechangehistory',
            new_name='role_change_user_id_c3d329_idx',
            old_name='role_change_user_id_9e8d7c_idx',
        ),
        migrations.RenameIndex(
            model_name='userroleassignment',
            new_name='user_role_a_assigne_13d2b8_idx',
            old_name='user_role_a_assigne_4e5f6a_idx',
        ),
        migrations.RenameIndex(
            model_name='userrolerequest',
            new_name='user_role_r_user_id_be72c1_idx',
            old_name='user_role_r_user_id_5c4b3a_idx',
        ),
        migrations.RemoveField(
            model_name='rolechangehistory',
            name='action',
        ),
        migrations.RemoveField(
            model_name='roledefinition',
            name='level',
        ),
        migrations.RemoveField(
            model_name='roledefinition',
            name='permission_groups',
        ),
        migrations.RemoveField(
            model_name='roledefinition',
            name='permissions',
        ),
        migrations.RemoveField(
            model_name='roledefinition',
            name='role_type',
        ),
        migrations.RemoveField(
            model_name='userrolerequest',
            name='priority',
        ),
        migrations.RemoveField(
            model_name='userrolerequest',
            name='processed_by',
        ),
        # Add the status field to UserRoleAssignment BEFORE creating constraints that reference it
        migrations.AddField(
            model_name='userroleassignment',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('revoked', 'Revoked'), ('expired', 'Expired')], default='active', max_length=20),
        ),
        # Add other fields that should be added before indexes
        migrations.AddField(
            model_name='userroleassignment',
            name='assignment_reason',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='userroleassignment',
            name='effective_from',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='userroleassignment',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='userroleassignment',
            name='revocation_reason',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='userroleassignment',
            name='revoked_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='userroleassignment',
            name='revoked_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_roles', to=settings.AUTH_USER_MODEL),
        ),
        # Now we can safely create the unique constraint that references the status field
        migrations.AlterUniqueTogether(
            name='userroleassignment',
            unique_together={('user', 'role', 'status')},
        ),
        # Add remaining fields
        migrations.AddField(
            model_name='rolechangehistory',
            name='change_type',
            field=models.CharField(choices=[('assigned', 'Role Assigned'), ('revoked', 'Role Revoked'), ('suspended', 'Role Suspended'), ('reactivated', 'Role Reactivated'), ('expired', 'Role Expired'), ('modified', 'Role Modified')], default=1, max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='rolechangehistory',
            name='context',
            field=models.JSONField(blank=True, default=dict, help_text='Additional context about the change (IP, user agent, etc.)'),
        ),
        migrations.AddField(
            model_name='rolechangehistory',
            name='previous_values',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='rolechangehistory',
            name='role_assignment',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='change_history', to='role_management.userroleassignment'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_manage_content',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_manage_courses',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_manage_payments',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_manage_system',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_manage_users',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_moderate_forums',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_support_users',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='can_view_analytics',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='display_name',
            field=models.CharField(default=1, max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='hierarchy_level',
            field=models.IntegerField(default=1, help_text='Lower numbers have higher privileges (1=highest, 10=lowest)'),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='is_assignable',
            field=models.BooleanField(default=True, help_text='Whether this role can be assigned to users'),
        ),
        migrations.AddField(
            model_name='roledefinition',
            name='max_users_manageable',
            field=models.IntegerField(blank=True, help_text='Maximum number of users this role can manage (null = unlimited)', null=True),
        ),
        migrations.AddField(
            model_name='userrolerequest',
            name='current_role',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='userrolerequest',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_role_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='userrolerequest',
            name='supporting_documents',
            field=models.JSONField(blank=True, default=list, help_text='List of document URLs or references'),
        ),
        migrations.AlterField(
            model_name='rolechangehistory',
            name='changed_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='rolechangehistory',
            name='changed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_changes_made', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='roledefinition',
            name='description',
            field=models.TextField(),
        ),
        migrations.AlterField(
            model_name='roledefinition',
            name='name',
            field=models.CharField(choices=[('admin', 'Administrator'), ('instructor', 'Instructor'), ('student', 'Student'), ('moderator', 'Moderator'), ('assistant', 'Teaching Assistant'), ('support', 'Support Staff')], max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='rolepermissiongroup',
            name='description',
            field=models.TextField(),
        ),
        migrations.RemoveField(
            model_name='rolepermissiongroup',
            name='permissions',
        ),
        migrations.AlterField(
            model_name='userroleassignment',
            name='assigned_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='userroleassignment',
            name='assigned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_roles', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='userrolerequest',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        # Add indexes that reference the status field AFTER the field is added
        migrations.AddIndex(
            model_name='rolechangehistory',
            index=models.Index(fields=['role', 'changed_at'], name='role_change_role_id_686d27_idx'),
        ),
        migrations.AddIndex(
            model_name='rolechangehistory',
            index=models.Index(fields=['change_type', 'changed_at'], name='role_change_change__ee183a_idx'),
        ),
        migrations.AddIndex(
            model_name='roledefinition',
            index=models.Index(fields=['name'], name='role_defini_name_659da2_idx'),
        ),
        migrations.AddIndex(
            model_name='roledefinition',
            index=models.Index(fields=['hierarchy_level'], name='role_defini_hierarc_050d75_idx'),
        ),
        migrations.AddIndex(
            model_name='roledefinition',
            index=models.Index(fields=['is_active', 'is_assignable'], name='role_defini_is_acti_23c840_idx'),
        ),
        migrations.AddIndex(
            model_name='userroleassignment',
            index=models.Index(fields=['user', 'status'], name='user_role_a_user_id_3de978_idx'),
        ),
        migrations.AddIndex(
            model_name='userroleassignment',
            index=models.Index(fields=['role', 'status'], name='user_role_a_role_id_3504f9_idx'),
        ),
        migrations.AddIndex(
            model_name='userroleassignment',
            index=models.Index(fields=['effective_from', 'effective_until'], name='user_role_a_effecti_99f62e_idx'),
        ),
        migrations.AddIndex(
            model_name='userrolerequest',
            index=models.Index(fields=['requested_role', 'status'], name='user_role_r_request_d6d67a_idx'),
        ),
        migrations.AddIndex(
            model_name='userrolerequest',
            index=models.Index(fields=['status', 'created_at'], name='user_role_r_status_c246d5_idx'),
        ),
        migrations.AddField(
            model_name='rolepermissionassignment',
            name='assigned_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='rolepermissionassignment',
            name='permission_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='role_management.rolepermissiongroup'),
        ),
        migrations.AddField(
            model_name='rolepermissionassignment',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='role_management.roledefinition'),
        ),
        migrations.AddField(
            model_name='rolepermissiongroup',
            name='roles',
            field=models.ManyToManyField(related_name='permission_groups', through='role_management.RolePermissionAssignment', to='role_management.roledefinition'),
        ),
        migrations.RemoveField(
            model_name='userroleassignment',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='userroleassignment',
            name='is_active',
        ),
        migrations.RemoveField(
            model_name='userroleassignment',
            name='reason',
        ),
        migrations.AddField(
            model_name='rolepermissiongroup',
            name='permissions',
            field=models.JSONField(default=list, help_text='List of permission identifiers in this group'),
        ),
        migrations.AlterUniqueTogether(
            name='rolepermissionassignment',
            unique_together={('role', 'permission_group')},
        ),
    ]