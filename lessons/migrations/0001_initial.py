# Generated by Django 5.2.5 on 2025-08-26 14:16

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('description', models.TextField(blank=True)),
                ('lesson_type', models.CharField(choices=[('video', 'Video'), ('text', 'Text/Article'), ('quiz', 'Quiz'), ('assignment', 'Assignment'), ('live_session', 'Live Session'), ('downloadable', 'Downloadable Resource')], max_length=20)),
                ('content', models.TextField(blank=True)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='lesson_videos/')),
                ('video_url', models.URLField(blank=True)),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='lesson_audios/')),
                ('downloadable_resources', models.JSONField(default=list)),
                ('duration_minutes', models.IntegerField(default=0)),
                ('sort_order', models.IntegerField(default=0)),
                ('is_preview', models.BooleanField(default=False)),
                ('is_mandatory', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'lessons',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('time_limit_minutes', models.IntegerField(blank=True, null=True)),
                ('max_attempts', models.IntegerField(default=1)),
                ('passing_score', models.IntegerField(default=70)),
                ('show_correct_answers', models.BooleanField(default=True)),
                ('randomize_questions', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quiz', to='lessons.lesson')),
            ],
            options={
                'db_table': 'quizzes',
            },
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_number', models.IntegerField()),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], default='in_progress', max_length=20)),
                ('total_questions', models.IntegerField()),
                ('correct_answers', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('earned_points', models.IntegerField(default=0)),
                ('percentage_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent_seconds', models.IntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='lessons.quiz')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'quiz_attempts',
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('multiple_choice', 'Multiple Choice'), ('true_false', 'True/False'), ('short_answer', 'Short Answer'), ('essay', 'Essay')], max_length=20)),
                ('points', models.IntegerField(default=1)),
                ('sort_order', models.IntegerField(default=0)),
                ('options', models.JSONField(default=list)),
                ('correct_answer', models.TextField(blank=True)),
                ('explanation', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='lessons.quiz')),
            ],
            options={
                'db_table': 'quiz_questions',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='QuizAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('selected_options', models.JSONField(default=list)),
                ('is_correct', models.BooleanField(default=False)),
                ('points_earned', models.IntegerField(default=0)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='lessons.quizattempt')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_answers', to='lessons.quizquestion')),
            ],
            options={
                'db_table': 'quiz_answers',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('sort_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='courses.course')),
            ],
            options={
                'db_table': 'course_sections',
                'ordering': ['sort_order'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='lessons.section'),
        ),
        migrations.CreateModel(
            name='LessonComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('is_instructor_reply', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='lessons.lesson')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='lessons.lessoncomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lesson_comments',
                'ordering': ['created_at'],
                'indexes': [models.Index(fields=['lesson', 'parent'], name='lesson_comm_lesson__28bb0d_idx'), models.Index(fields=['user', 'created_at'], name='lesson_comm_user_id_0ca7a7_idx')],
            },
        ),
        migrations.CreateModel(
            name='LessonNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('timestamp_seconds', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_notes', to='lessons.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lesson_notes',
                'ordering': ['timestamp_seconds', 'created_at'],
                'indexes': [models.Index(fields=['student', 'lesson'], name='lesson_note_student_c2f84c_idx')],
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('time_spent_minutes', models.IntegerField(default=0)),
                ('video_progress_seconds', models.IntegerField(default=0)),
                ('video_duration_seconds', models.IntegerField(default=0)),
                ('first_accessed_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='lessons.lesson')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lesson_progress',
                'indexes': [models.Index(fields=['student', 'is_completed'], name='lesson_prog_student_b7dc83_idx'), models.Index(fields=['lesson', 'is_completed'], name='lesson_prog_lesson__7f1273_idx')],
                'unique_together': {('student', 'lesson')},
            },
        ),
        migrations.AddIndex(
            model_name='quizattempt',
            index=models.Index(fields=['student', 'quiz'], name='quiz_attemp_student_1efa68_idx'),
        ),
        migrations.AddIndex(
            model_name='quizattempt',
            index=models.Index(fields=['quiz', 'status'], name='quiz_attemp_quiz_id_6a0820_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='quizattempt',
            unique_together={('student', 'quiz', 'attempt_number')},
        ),
        migrations.AlterUniqueTogether(
            name='quizanswer',
            unique_together={('attempt', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='section',
            unique_together={('course', 'sort_order')},
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['section', 'status'], name='lessons_section_35307b_idx'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['lesson_type', 'status'], name='lessons_lesson__21226c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('section', 'sort_order')},
        ),
    ]
