# Generated by Django 5.2.5 on 2025-08-26 14:14

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True)),
                ('assignment_type', models.CharField(choices=[('individual', 'Individual Assignment'), ('group', 'Group Assignment'), ('peer_review', 'Peer Review Assignment'), ('project', 'Project'), ('presentation', 'Presentation')], max_length=20)),
                ('grading_type', models.CharField(choices=[('points', 'Points (0-100)'), ('letter', 'Letter Grade (A-F)'), ('pass_fail', 'Pass/Fail'), ('rubric', 'Rubric Based')], default='points', max_length=20)),
                ('max_points', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(1)])),
                ('assigned_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField()),
                ('late_submission_allowed', models.BooleanField(default=True)),
                ('late_penalty_percentage', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('allow_file_uploads', models.BooleanField(default=True)),
                ('allowed_file_types', models.JSONField(default=list)),
                ('max_file_size_mb', models.IntegerField(default=10)),
                ('max_files_count', models.IntegerField(default=5)),
                ('allow_text_submission', models.BooleanField(default=True)),
                ('allow_url_submission', models.BooleanField(default=False)),
                ('max_group_size', models.IntegerField(blank=True, null=True)),
                ('allow_self_selection', models.BooleanField(default=True)),
                ('is_auto_gradable', models.BooleanField(default=False)),
                ('auto_grade_criteria', models.JSONField(blank=True, default=dict)),
                ('is_published', models.BooleanField(default=False)),
                ('is_draft', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='courses.coursebatch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='courses.course')),
            ],
            options={
                'db_table': 'assignments',
                'ordering': ['-assigned_date'],
            },
        ),
        migrations.CreateModel(
            name='AssignmentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='assignments.assignment')),
                ('leader', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_groups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assignment_groups',
            },
        ),
        migrations.CreateModel(
            name='AssignmentGroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='assignments.assignmentgroup')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assignment_group_members',
            },
        ),
        migrations.CreateModel(
            name='AssignmentRubric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='rubric', to='assignments.assignment')),
            ],
            options={
                'db_table': 'assignment_rubrics',
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_submission', models.TextField(blank=True)),
                ('url_submission', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('returned', 'Returned for Revision'), ('late', 'Late Submission')], default='draft', max_length=20)),
                ('is_late', models.BooleanField(default=False)),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('letter_grade', models.CharField(blank=True, max_length=2)),
                ('instructor_feedback', models.TextField(blank=True)),
                ('private_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('graded_at', models.DateTimeField(blank=True, null=True)),
                ('last_modified_at', models.DateTimeField(auto_now=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assignments.assignment')),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_submissions', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='assignments.assignmentgroup')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignment_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assignment_submissions',
            },
        ),
        migrations.CreateModel(
            name='AssignmentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='assignment_submissions/')),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size_bytes', models.BigIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='assignments.assignmentsubmission')),
            ],
            options={
                'db_table': 'assignment_files',
            },
        ),
        migrations.CreateModel(
            name='PeerReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reviews_per_submission', models.IntegerField(default=3)),
                ('reviewer_anonymity', models.BooleanField(default=True)),
                ('review_start_date', models.DateTimeField()),
                ('review_end_date', models.DateTimeField()),
                ('review_instructions', models.TextField()),
                ('review_criteria', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='peer_review', to='assignments.assignment')),
            ],
            options={
                'db_table': 'peer_reviews',
            },
        ),
        migrations.CreateModel(
            name='PeerReviewAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('peer_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_assignments', to='assignments.peerreview')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_reviews', to=settings.AUTH_USER_MODEL)),
                ('submission_to_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peer_review_assignments', to='assignments.assignmentsubmission')),
            ],
            options={
                'db_table': 'peer_review_assignments',
            },
        ),
        migrations.CreateModel(
            name='PeerReviewSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overall_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('criteria_scores', models.JSONField(default=dict)),
                ('written_feedback', models.TextField()),
                ('suggestions', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('instructor_notes', models.TextField(blank=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('review_assignment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review_submission', to='assignments.peerreviewassignment')),
            ],
            options={
                'db_table': 'peer_review_submissions',
            },
        ),
        migrations.CreateModel(
            name='RubricCriterion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('points', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('sort_order', models.IntegerField(default=0)),
                ('rubric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='criteria', to='assignments.assignmentrubric')),
            ],
            options={
                'db_table': 'rubric_criteria',
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='RubricLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('points', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('sort_order', models.IntegerField(default=0)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='assignments.rubriccriterion')),
            ],
            options={
                'db_table': 'rubric_levels',
                'ordering': ['-points'],
            },
        ),
        migrations.CreateModel(
            name='RubricGrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_earned', models.IntegerField()),
                ('comments', models.TextField(blank=True)),
                ('graded_at', models.DateTimeField(auto_now_add=True)),
                ('criterion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='assignments.rubriccriterion')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubric_grades', to='assignments.assignmentsubmission')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_grades', to='assignments.rubriclevel')),
            ],
            options={
                'db_table': 'rubric_grades',
            },
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['course', 'batch'], name='assignments_course__c92b88_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['due_date', 'is_published'], name='assignments_due_dat_62ce5b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentgroup',
            unique_together={('assignment', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='assignmentgroupmember',
            unique_together={('group', 'student')},
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['assignment', 'status'], name='assignment__assignm_68808b_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['student', 'status'], name='assignment__student_e9c2f6_idx'),
        ),
        migrations.AddIndex(
            model_name='assignmentsubmission',
            index=models.Index(fields=['submitted_at'], name='assignment__submitt_040795_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assignmentsubmission',
            unique_together={('assignment', 'student')},
        ),
        migrations.AlterUniqueTogether(
            name='peerreviewassignment',
            unique_together={('reviewer', 'submission_to_review')},
        ),
        migrations.AlterUniqueTogether(
            name='rubricgrade',
            unique_together={('submission', 'criterion')},
        ),
    ]
