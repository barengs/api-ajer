# Generated by Django 5.2.5 on 2025-08-26 14:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('forum_type', models.CharField(choices=[('general', 'General Discussion'), ('qna', 'Q&A'), ('announcements', 'Announcements'), ('assignments', 'Assignment Discussion'), ('batch_specific', 'Batch Specific')], default='general', max_length=20)),
                ('allow_student_posts', models.BooleanField(default=True)),
                ('require_moderation', models.BooleanField(default=False)),
                ('is_private', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_locked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forums', to='courses.coursebatch')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forums', to='courses.course')),
            ],
            options={
                'db_table': 'forums',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('content', models.TextField()),
                ('post_type', models.CharField(choices=[('discussion', 'Discussion'), ('question', 'Question'), ('announcement', 'Announcement'), ('poll', 'Poll')], default='discussion', max_length=20)),
                ('is_question_resolved', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('pending', 'Pending Approval'), ('rejected', 'Rejected')], default='published', max_length=20)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('view_count', models.IntegerField(default=0)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_posts', to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='forums.forum')),
            ],
            options={
                'db_table': 'forum_posts',
                'ordering': ['-is_pinned', '-last_activity_at'],
            },
        ),
        migrations.CreateModel(
            name='ForumReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('status', models.CharField(choices=[('published', 'Published'), ('pending', 'Pending Approval'), ('rejected', 'Rejected'), ('spam', 'Marked as Spam')], default='published', max_length=20)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_instructor_reply', models.BooleanField(default=False)),
                ('is_answer', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0)),
                ('downvotes', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_replies', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_replies', to='forums.forumreply')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='forums.forumpost')),
            ],
            options={
                'db_table': 'forum_replies',
                'ordering': ['-is_answer', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='forumpost',
            name='accepted_answer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_for_posts', to='forums.forumreply'),
        ),
        migrations.CreateModel(
            name='ForumActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('post_created', 'Post Created'), ('post_viewed', 'Post Viewed'), ('reply_created', 'Reply Created'), ('vote_cast', 'Vote Cast'), ('post_subscribed', 'Post Subscribed')], max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='forums.forum')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_activities', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='forums.forumpost')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='forums.forumreply')),
            ],
            options={
                'db_table': 'forum_activities',
            },
        ),
        migrations.CreateModel(
            name='ForumReportedContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam'), ('inappropriate', 'Inappropriate Content'), ('harassment', 'Harassment'), ('off_topic', 'Off Topic'), ('copyright', 'Copyright Violation'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('reviewed', 'Reviewed'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('moderator_notes', models.TextField(blank=True)),
                ('action_taken', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='forums.forumpost')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='forums.forumreply')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_reports', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forum_reported_content',
            },
        ),
        migrations.CreateModel(
            name='ForumSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_new_replies', models.BooleanField(default=True)),
                ('notify_accepted_answer', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='forums.forumpost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forum_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='ForumVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('upvote', 'Upvote'), ('downvote', 'Downvote')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='forums.forumpost')),
                ('reply', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='forums.forumreply')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forum_votes',
            },
        ),
        migrations.AddIndex(
            model_name='forum',
            index=models.Index(fields=['course', 'forum_type'], name='forums_course__33cc4a_idx'),
        ),
        migrations.AddIndex(
            model_name='forum',
            index=models.Index(fields=['batch', 'is_active'], name='forums_batch_i_cbd30c_idx'),
        ),
        migrations.AddIndex(
            model_name='forumreply',
            index=models.Index(fields=['post', 'status'], name='forum_repli_post_id_e78409_idx'),
        ),
        migrations.AddIndex(
            model_name='forumreply',
            index=models.Index(fields=['author', 'status'], name='forum_repli_author__3eef00_idx'),
        ),
        migrations.AddIndex(
            model_name='forumreply',
            index=models.Index(fields=['parent'], name='forum_repli_parent__73c8d9_idx'),
        ),
        migrations.AddIndex(
            model_name='forumpost',
            index=models.Index(fields=['forum', 'status'], name='forum_posts_forum_i_b04be9_idx'),
        ),
        migrations.AddIndex(
            model_name='forumpost',
            index=models.Index(fields=['author', 'status'], name='forum_posts_author__fba486_idx'),
        ),
        migrations.AddIndex(
            model_name='forumpost',
            index=models.Index(fields=['post_type', 'is_approved'], name='forum_posts_post_ty_c93ccd_idx'),
        ),
        migrations.AddIndex(
            model_name='forumpost',
            index=models.Index(fields=['-last_activity_at'], name='forum_posts_last_ac_7bafd0_idx'),
        ),
        migrations.AddIndex(
            model_name='forumactivity',
            index=models.Index(fields=['user', 'activity_type'], name='forum_activ_user_id_72a538_idx'),
        ),
        migrations.AddIndex(
            model_name='forumactivity',
            index=models.Index(fields=['forum', 'created_at'], name='forum_activ_forum_i_ce370a_idx'),
        ),
        migrations.AddIndex(
            model_name='forumreportedcontent',
            index=models.Index(fields=['status', 'created_at'], name='forum_repor_status_d002e2_idx'),
        ),
        migrations.AddIndex(
            model_name='forumreportedcontent',
            index=models.Index(fields=['reporter'], name='forum_repor_reporte_37d29d_idx'),
        ),
        migrations.AddConstraint(
            model_name='forumreportedcontent',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('post__isnull', False), ('reply__isnull', True)), models.Q(('post__isnull', True), ('reply__isnull', False)), _connector='OR'), name='report_either_post_or_reply'),
        ),
        migrations.AlterUniqueTogether(
            name='forumsubscription',
            unique_together={('user', 'post')},
        ),
        migrations.AddIndex(
            model_name='forumvote',
            index=models.Index(fields=['user', 'post'], name='forum_votes_user_id_44a339_idx'),
        ),
        migrations.AddIndex(
            model_name='forumvote',
            index=models.Index(fields=['user', 'reply'], name='forum_votes_user_id_90ec8a_idx'),
        ),
        migrations.AddConstraint(
            model_name='forumvote',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('post__isnull', False), ('reply__isnull', True)), models.Q(('post__isnull', True), ('reply__isnull', False)), _connector='OR'), name='vote_either_post_or_reply'),
        ),
    ]
